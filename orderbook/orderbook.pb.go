// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderbook/orderbook.proto

package orderbook

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Exchange int32

const (
	Exchange_UnknownExchange Exchange = 0
	Exchange_Idex            Exchange = 1
	Exchange_EtherDelta      Exchange = 2
	Exchange_ForkDelta       Exchange = 3
	Exchange_Binance         Exchange = 4
	Exchange_HitBTC          Exchange = 5
	Exchange_Mercatox        Exchange = 6
	Exchange_Huobi           Exchange = 7
	Exchange_Hadax           Exchange = 8
	Exchange_Bitfinex        Exchange = 9
	Exchange_Ethfinex        Exchange = 10
	Exchange_Coinex          Exchange = 11
	Exchange_Kucoin          Exchange = 12
	Exchange_Okex            Exchange = 13
	Exchange_Bittrex         Exchange = 14
	Exchange_Bibox           Exchange = 15
	Exchange_Bilaxy          Exchange = 16
	Exchange_Tidex           Exchange = 17
	Exchange_Ddex            Exchange = 18
	Exchange_Coinegg         Exchange = 19
	Exchange_Lbank           Exchange = 20
	Exchange_BigOne          Exchange = 21
	Exchange_Coinbene        Exchange = 22
	Exchange_Liqui           Exchange = 23
	Exchange_Cobinhood       Exchange = 24
	Exchange_Gate            Exchange = 25
	Exchange_Bcex            Exchange = 26
	Exchange_Kraken          Exchange = 27
	Exchange_Liquid          Exchange = 28
	Exchange_Coinbase        Exchange = 29
	Exchange_Poloniex        Exchange = 30
	Exchange_Bitz            Exchange = 31
	Exchange_Switcheo        Exchange = 32
	Exchange_Idax            Exchange = 33
	Exchange_Tokenstore      Exchange = 34
	Exchange_Bithumb         Exchange = 35
	Exchange_BithumbDex      Exchange = 36
	Exchange_ZBcom           Exchange = 37
	Exchange_Cryptopia       Exchange = 38
)

var Exchange_name = map[int32]string{
	0:  "UnknownExchange",
	1:  "Idex",
	2:  "EtherDelta",
	3:  "ForkDelta",
	4:  "Binance",
	5:  "HitBTC",
	6:  "Mercatox",
	7:  "Huobi",
	8:  "Hadax",
	9:  "Bitfinex",
	10: "Ethfinex",
	11: "Coinex",
	12: "Kucoin",
	13: "Okex",
	14: "Bittrex",
	15: "Bibox",
	16: "Bilaxy",
	17: "Tidex",
	18: "Ddex",
	19: "Coinegg",
	20: "Lbank",
	21: "BigOne",
	22: "Coinbene",
	23: "Liqui",
	24: "Cobinhood",
	25: "Gate",
	26: "Bcex",
	27: "Kraken",
	28: "Liquid",
	29: "Coinbase",
	30: "Poloniex",
	31: "Bitz",
	32: "Switcheo",
	33: "Idax",
	34: "Tokenstore",
	35: "Bithumb",
	36: "BithumbDex",
	37: "ZBcom",
	38: "Cryptopia",
}

var Exchange_value = map[string]int32{
	"UnknownExchange": 0,
	"Idex":            1,
	"EtherDelta":      2,
	"ForkDelta":       3,
	"Binance":         4,
	"HitBTC":          5,
	"Mercatox":        6,
	"Huobi":           7,
	"Hadax":           8,
	"Bitfinex":        9,
	"Ethfinex":        10,
	"Coinex":          11,
	"Kucoin":          12,
	"Okex":            13,
	"Bittrex":         14,
	"Bibox":           15,
	"Bilaxy":          16,
	"Tidex":           17,
	"Ddex":            18,
	"Coinegg":         19,
	"Lbank":           20,
	"BigOne":          21,
	"Coinbene":        22,
	"Liqui":           23,
	"Cobinhood":       24,
	"Gate":            25,
	"Bcex":            26,
	"Kraken":          27,
	"Liquid":          28,
	"Coinbase":        29,
	"Poloniex":        30,
	"Bitz":            31,
	"Switcheo":        32,
	"Idax":            33,
	"Tokenstore":      34,
	"Bithumb":         35,
	"BithumbDex":      36,
	"ZBcom":           37,
	"Cryptopia":       38,
}

func (x Exchange) String() string {
	return proto.EnumName(Exchange_name, int32(x))
}

func (Exchange) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_233e91af0692daf8, []int{0}
}

type Market int32

const (
	Market_UnknownMarket Market = 0
	Market_BTC           Market = 1
	Market_ETH           Market = 2
	Market_USDT          Market = 3
	Market_TUSD          Market = 4
	Market_USD           Market = 5
	Market_USDC          Market = 6
	Market_GUSD          Market = 7
	Market_BNB           Market = 8
	Market_BIX           Market = 9
	Market_DAI           Market = 10
	Market_BCH           Market = 11
	Market_CET           Market = 12
	Market_QTUM          Market = 13
	Market_NEO           Market = 14
	Market_KCS           Market = 15
	Market_EOS           Market = 16
	Market_EUR           Market = 17
	Market_GBP           Market = 18
	Market_JPY           Market = 19
	Market_COB           Market = 20
	Market_PAX           Market = 21
	Market_GAS           Market = 22
	Market_SWTH          Market = 23
	Market_KRW           Market = 24
	Market_QASH          Market = 25
	Market_CNY           Market = 26
	Market_INR           Market = 27
	Market_SGD           Market = 28
	Market_AUD           Market = 29
	Market_IDR           Market = 30
	Market_HKD           Market = 31
	Market_ZB            Market = 32
	Market_QC            Market = 33
)

var Market_name = map[int32]string{
	0:  "UnknownMarket",
	1:  "BTC",
	2:  "ETH",
	3:  "USDT",
	4:  "TUSD",
	5:  "USD",
	6:  "USDC",
	7:  "GUSD",
	8:  "BNB",
	9:  "BIX",
	10: "DAI",
	11: "BCH",
	12: "CET",
	13: "QTUM",
	14: "NEO",
	15: "KCS",
	16: "EOS",
	17: "EUR",
	18: "GBP",
	19: "JPY",
	20: "COB",
	21: "PAX",
	22: "GAS",
	23: "SWTH",
	24: "KRW",
	25: "QASH",
	26: "CNY",
	27: "INR",
	28: "SGD",
	29: "AUD",
	30: "IDR",
	31: "HKD",
	32: "ZB",
	33: "QC",
}

var Market_value = map[string]int32{
	"UnknownMarket": 0,
	"BTC":           1,
	"ETH":           2,
	"USDT":          3,
	"TUSD":          4,
	"USD":           5,
	"USDC":          6,
	"GUSD":          7,
	"BNB":           8,
	"BIX":           9,
	"DAI":           10,
	"BCH":           11,
	"CET":           12,
	"QTUM":          13,
	"NEO":           14,
	"KCS":           15,
	"EOS":           16,
	"EUR":           17,
	"GBP":           18,
	"JPY":           19,
	"COB":           20,
	"PAX":           21,
	"GAS":           22,
	"SWTH":          23,
	"KRW":           24,
	"QASH":          25,
	"CNY":           26,
	"INR":           27,
	"SGD":           28,
	"AUD":           29,
	"IDR":           30,
	"HKD":           31,
	"ZB":            32,
	"QC":            33,
}

func (x Market) String() string {
	return proto.EnumName(Market_name, int32(x))
}

func (Market) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_233e91af0692daf8, []int{1}
}

type OrderBook struct {
	LastUpdateId         int64    `protobuf:"varint,1,opt,name=LastUpdateId,proto3" json:"LastUpdateId,omitempty"`
	Exchange             Exchange `protobuf:"varint,2,opt,name=Exchange,proto3,enum=orderbook.Exchange" json:"Exchange,omitempty"`
	Market               Market   `protobuf:"varint,3,opt,name=Market,proto3,enum=orderbook.Market" json:"Market,omitempty"`
	Ticker               string   `protobuf:"bytes,4,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	Asks                 []*Order `protobuf:"bytes,5,rep,name=Asks,proto3" json:"Asks,omitempty"`
	Bids                 []*Order `protobuf:"bytes,6,rep,name=Bids,proto3" json:"Bids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderBook) Reset()         { *m = OrderBook{} }
func (m *OrderBook) String() string { return proto.CompactTextString(m) }
func (*OrderBook) ProtoMessage()    {}
func (*OrderBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_233e91af0692daf8, []int{0}
}

func (m *OrderBook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBook.Unmarshal(m, b)
}
func (m *OrderBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBook.Marshal(b, m, deterministic)
}
func (m *OrderBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBook.Merge(m, src)
}
func (m *OrderBook) XXX_Size() int {
	return xxx_messageInfo_OrderBook.Size(m)
}
func (m *OrderBook) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBook.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBook proto.InternalMessageInfo

func (m *OrderBook) GetLastUpdateId() int64 {
	if m != nil {
		return m.LastUpdateId
	}
	return 0
}

func (m *OrderBook) GetExchange() Exchange {
	if m != nil {
		return m.Exchange
	}
	return Exchange_UnknownExchange
}

func (m *OrderBook) GetMarket() Market {
	if m != nil {
		return m.Market
	}
	return Market_UnknownMarket
}

func (m *OrderBook) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *OrderBook) GetAsks() []*Order {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *OrderBook) GetBids() []*Order {
	if m != nil {
		return m.Bids
	}
	return nil
}

type OrderBookDiff struct {
	LastUpdateId         int64    `protobuf:"varint,1,opt,name=LastUpdateId,proto3" json:"LastUpdateId,omitempty"`
	Exchange             Exchange `protobuf:"varint,2,opt,name=Exchange,proto3,enum=orderbook.Exchange" json:"Exchange,omitempty"`
	Market               Market   `protobuf:"varint,3,opt,name=Market,proto3,enum=orderbook.Market" json:"Market,omitempty"`
	Ticker               string   `protobuf:"bytes,4,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	Asks                 []*Order `protobuf:"bytes,5,rep,name=Asks,proto3" json:"Asks,omitempty"`
	Bids                 []*Order `protobuf:"bytes,6,rep,name=Bids,proto3" json:"Bids,omitempty"`
	FirstUpdateId        int64    `protobuf:"varint,7,opt,name=FirstUpdateId,proto3" json:"FirstUpdateId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderBookDiff) Reset()         { *m = OrderBookDiff{} }
func (m *OrderBookDiff) String() string { return proto.CompactTextString(m) }
func (*OrderBookDiff) ProtoMessage()    {}
func (*OrderBookDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_233e91af0692daf8, []int{1}
}

func (m *OrderBookDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBookDiff.Unmarshal(m, b)
}
func (m *OrderBookDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBookDiff.Marshal(b, m, deterministic)
}
func (m *OrderBookDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBookDiff.Merge(m, src)
}
func (m *OrderBookDiff) XXX_Size() int {
	return xxx_messageInfo_OrderBookDiff.Size(m)
}
func (m *OrderBookDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBookDiff.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBookDiff proto.InternalMessageInfo

func (m *OrderBookDiff) GetLastUpdateId() int64 {
	if m != nil {
		return m.LastUpdateId
	}
	return 0
}

func (m *OrderBookDiff) GetExchange() Exchange {
	if m != nil {
		return m.Exchange
	}
	return Exchange_UnknownExchange
}

func (m *OrderBookDiff) GetMarket() Market {
	if m != nil {
		return m.Market
	}
	return Market_UnknownMarket
}

func (m *OrderBookDiff) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *OrderBookDiff) GetAsks() []*Order {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *OrderBookDiff) GetBids() []*Order {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *OrderBookDiff) GetFirstUpdateId() int64 {
	if m != nil {
		return m.FirstUpdateId
	}
	return 0
}

type Order struct {
	Price                float32  `protobuf:"fixed32,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             float32  `protobuf:"fixed32,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_233e91af0692daf8, []int{2}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterEnum("orderbook.Exchange", Exchange_name, Exchange_value)
	proto.RegisterEnum("orderbook.Market", Market_name, Market_value)
	proto.RegisterType((*OrderBook)(nil), "orderbook.OrderBook")
	proto.RegisterType((*OrderBookDiff)(nil), "orderbook.OrderBookDiff")
	proto.RegisterType((*Order)(nil), "orderbook.Order")
}

func init() { proto.RegisterFile("orderbook/orderbook.proto", fileDescriptor_233e91af0692daf8) }

var fileDescriptor_233e91af0692daf8 = []byte{
	// 764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x94, 0xcd, 0x52, 0x1b, 0x47,
	0x10, 0xc7, 0xad, 0x6f, 0x69, 0x40, 0xf0, 0x67, 0xc0, 0x58, 0xe0, 0x2f, 0x59, 0x21, 0x29, 0xe2,
	0x83, 0x5d, 0xe5, 0x9c, 0x72, 0xd4, 0x6a, 0x65, 0xa4, 0x60, 0x90, 0xd8, 0x5d, 0x95, 0x3f, 0x6e,
	0xa3, 0xd5, 0x80, 0xa6, 0x16, 0xcf, 0x90, 0xd5, 0xa8, 0xbc, 0xe4, 0x4d, 0xf2, 0x48, 0x79, 0x9a,
	0x9c, 0x73, 0x4b, 0xf5, 0xac, 0x90, 0xe1, 0x90, 0x27, 0xc8, 0x89, 0x5f, 0x77, 0xff, 0xfb, 0xbf,
	0xdd, 0xd3, 0x94, 0xd8, 0x81, 0x49, 0x67, 0x32, 0x9d, 0x1a, 0x93, 0xbc, 0x5d, 0xd3, 0x9b, 0x9b,
	0xd4, 0x58, 0xc3, 0x1b, 0xeb, 0x44, 0xe7, 0xef, 0x02, 0x6b, 0x8c, 0x28, 0xf2, 0x8c, 0x49, 0x78,
	0x87, 0x6d, 0x7e, 0x10, 0x0b, 0x3b, 0xb9, 0x99, 0x09, 0x2b, 0x87, 0xb3, 0x56, 0xa1, 0x5d, 0x38,
	0x2e, 0x05, 0x0f, 0x72, 0xfc, 0x2d, 0xab, 0xf7, 0xb3, 0x78, 0x2e, 0xf4, 0x95, 0x6c, 0x15, 0xdb,
	0x85, 0xe3, 0xad, 0x77, 0xbb, 0x6f, 0xbe, 0x7f, 0xe0, 0xae, 0x14, 0xac, 0x45, 0xfc, 0x67, 0x56,
	0x3d, 0x13, 0x69, 0x22, 0x6d, 0xab, 0xe4, 0xe4, 0x3b, 0xf7, 0xe4, 0x79, 0x21, 0x58, 0x09, 0xf8,
	0x3e, 0xab, 0x46, 0x2a, 0x4e, 0x64, 0xda, 0x2a, 0xb7, 0x0b, 0xc7, 0x8d, 0x60, 0x15, 0xf1, 0x23,
	0x56, 0xee, 0x2e, 0x92, 0x45, 0xab, 0xd2, 0x2e, 0x1d, 0x6f, 0xbc, 0xc3, 0x3d, 0x03, 0x37, 0x7b,
	0xe0, 0xaa, 0xa4, 0xf2, 0xd4, 0x6c, 0xd1, 0xaa, 0xfe, 0x97, 0x8a, 0xaa, 0x9d, 0x3f, 0x8b, 0xac,
	0xb9, 0xde, 0xd8, 0x57, 0x97, 0x97, 0xff, 0x87, 0xad, 0xf9, 0x11, 0x6b, 0xbe, 0x57, 0xe9, 0xbd,
	0x25, 0x6b, 0x6e, 0xc9, 0x87, 0xc9, 0xce, 0xaf, 0xac, 0xe2, 0x9a, 0xf8, 0x1e, 0xab, 0x8c, 0x53,
	0x15, 0x4b, 0xf7, 0x16, 0xc5, 0x20, 0x0f, 0xf8, 0x21, 0xab, 0x5f, 0x2c, 0x85, 0xb6, 0xca, 0xde,
	0xba, 0x47, 0x28, 0x06, 0xeb, 0xf8, 0xf5, 0x3f, 0xa5, 0xef, 0x2f, 0xc4, 0x77, 0xd9, 0xf6, 0x44,
	0x27, 0xda, 0x7c, 0xd3, 0x77, 0x29, 0x3c, 0xe2, 0x75, 0x56, 0x1e, 0xce, 0x64, 0x86, 0x02, 0xdf,
	0x62, 0xac, 0x6f, 0xe7, 0x32, 0xf5, 0xe5, 0xb5, 0x15, 0x28, 0xf2, 0x26, 0x6b, 0xbc, 0x37, 0x69,
	0x92, 0x87, 0x25, 0xbe, 0xc1, 0x6a, 0x9e, 0xd2, 0x42, 0xc7, 0x12, 0x65, 0xce, 0x58, 0x75, 0xa0,
	0xac, 0x17, 0xf5, 0x50, 0xe1, 0x9b, 0xac, 0x7e, 0x26, 0xd3, 0x58, 0x58, 0x93, 0xa1, 0xca, 0x1b,
	0xac, 0x32, 0x58, 0x9a, 0xa9, 0x42, 0xcd, 0xa1, 0x98, 0x89, 0x0c, 0x75, 0xd2, 0x78, 0xca, 0x5e,
	0x2a, 0x2d, 0x33, 0x34, 0x28, 0xea, 0xdb, 0x79, 0x1e, 0x31, 0xf2, 0xea, 0x19, 0xc7, 0x1b, 0xc4,
	0xa7, 0xcb, 0xd8, 0x28, 0x8d, 0x4d, 0x9a, 0x6c, 0x94, 0xc8, 0x0c, 0xcd, 0xfc, 0xd3, 0xd6, 0xa6,
	0x32, 0xc3, 0x16, 0xb9, 0x7a, 0x6a, 0x6a, 0x32, 0x6c, 0x93, 0xda, 0x53, 0xd7, 0x22, 0xbb, 0x05,
	0x28, 0x1d, 0x29, 0x5a, 0x64, 0x87, 0x1a, 0x7d, 0x22, 0x4e, 0x8d, 0xce, 0xfa, 0xea, 0x0a, 0xbb,
	0xa4, 0xf8, 0x30, 0x15, 0x3a, 0xc1, 0x5e, 0xde, 0x78, 0x35, 0xd2, 0x12, 0x8f, 0x69, 0x18, 0xd2,
	0x4c, 0xa5, 0x96, 0xd8, 0x77, 0x22, 0xf5, 0xfb, 0x52, 0xe1, 0x09, 0xed, 0xdf, 0x33, 0x53, 0xa5,
	0xe7, 0xc6, 0xcc, 0xd0, 0x22, 0xd7, 0x13, 0x61, 0x25, 0x0e, 0x88, 0xbc, 0x58, 0x66, 0x38, 0x74,
	0xe3, 0xa6, 0x22, 0x91, 0x1a, 0x4f, 0x89, 0x5d, 0xe7, 0x0c, 0xcf, 0xd6, 0x9e, 0x62, 0x21, 0xf1,
	0x9c, 0xa2, 0xb1, 0xb9, 0x36, 0x5a, 0xc9, 0x0c, 0x2f, 0x5c, 0xb7, 0xb2, 0x7f, 0xe0, 0x25, 0xe5,
	0xc3, 0x6f, 0xca, 0xc6, 0x73, 0x69, 0xd0, 0xce, 0x0f, 0x21, 0x32, 0xbc, 0xa2, 0x43, 0x44, 0x26,
	0x91, 0x7a, 0x61, 0x4d, 0x2a, 0xd1, 0x59, 0xad, 0x3f, 0x5f, 0x7e, 0x9d, 0xe2, 0x07, 0x2a, 0xae,
	0x02, 0x5f, 0x66, 0x38, 0xa2, 0x81, 0xbf, 0x78, 0xb1, 0xf9, 0x8a, 0x1f, 0xdd, 0xc0, 0xe9, 0xed,
	0x8d, 0x35, 0x37, 0x4a, 0xe0, 0xa7, 0xd7, 0x7f, 0x15, 0xef, 0xfe, 0xd9, 0xf9, 0x0e, 0x6b, 0xae,
	0x2e, 0x9f, 0x27, 0xf0, 0x88, 0xd7, 0x58, 0x89, 0xce, 0x57, 0x20, 0xe8, 0x47, 0x03, 0x14, 0x69,
	0x80, 0x49, 0xe8, 0x47, 0x28, 0x11, 0x45, 0x93, 0xd0, 0x47, 0x99, 0x8a, 0x04, 0x95, 0x55, 0xb1,
	0x87, 0xaa, 0x7b, 0x07, 0xca, 0xd5, 0x9c, 0xc5, 0xb9, 0x87, 0xba, 0x83, 0xe1, 0x27, 0x34, 0x08,
	0xfc, 0xee, 0x10, 0xcc, 0x65, 0x7a, 0x03, 0x6c, 0x10, 0xf4, 0xfa, 0x51, 0x7e, 0xcd, 0x8b, 0x68,
	0x72, 0x86, 0x26, 0xa5, 0xce, 0xfb, 0x23, 0x6c, 0x11, 0x9c, 0xf6, 0x42, 0x6c, 0xbb, 0x11, 0x46,
	0x21, 0xe0, 0x60, 0x12, 0x60, 0x87, 0xe0, 0xc4, 0x1b, 0x83, 0x13, 0xfc, 0x36, 0xfe, 0x8c, 0x5d,
	0x67, 0x34, 0xf2, 0xb0, 0x47, 0x30, 0xee, 0x7e, 0xc2, 0x63, 0xa7, 0xe9, 0x86, 0xd8, 0x27, 0xeb,
	0xf0, 0x63, 0x34, 0xc0, 0x13, 0xe7, 0x18, 0x7c, 0xcc, 0x8f, 0x75, 0xd1, 0x0d, 0x07, 0x38, 0x70,
	0x7d, 0xe7, 0x9f, 0x71, 0x48, 0x30, 0x3c, 0x0f, 0xf0, 0x94, 0x20, 0x3c, 0xf1, 0xf1, 0x8c, 0xa0,
	0x3b, 0xf1, 0xf1, 0xdc, 0x95, 0xfc, 0x00, 0x2f, 0x08, 0x06, 0xa7, 0x3e, 0x5e, 0xf2, 0x2a, 0x2b,
	0x7e, 0xf1, 0xd0, 0xa6, 0xbf, 0x17, 0x3d, 0xbc, 0x9a, 0x56, 0xdd, 0x4f, 0xf4, 0x2f, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xf5, 0x35, 0x07, 0x1c, 0xbf, 0x05, 0x00, 0x00,
}
