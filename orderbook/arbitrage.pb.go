// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arbitrage.proto

package orderbook

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ArbitrageMessage struct {
	Percent                float32  `protobuf:"fixed32,1,opt,name=Percent,proto3" json:"Percent,omitempty"`
	Ex1                    Exchange `protobuf:"varint,2,opt,name=Ex1,proto3,enum=orderbook.Exchange" json:"Ex1,omitempty"`
	Ex2                    Exchange `protobuf:"varint,3,opt,name=Ex2,proto3,enum=orderbook.Exchange" json:"Ex2,omitempty"`
	Market1                Market   `protobuf:"varint,4,opt,name=Market1,proto3,enum=orderbook.Market" json:"Market1,omitempty"`
	Market2                Market   `protobuf:"varint,5,opt,name=Market2,proto3,enum=orderbook.Market" json:"Market2,omitempty"`
	CrossMarket1           Market   `protobuf:"varint,6,opt,name=CrossMarket1,proto3,enum=orderbook.Market" json:"CrossMarket1,omitempty"`
	CrossMarket2           Market   `protobuf:"varint,7,opt,name=CrossMarket2,proto3,enum=orderbook.Market" json:"CrossMarket2,omitempty"`
	Ticker                 string   `protobuf:"bytes,8,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	MinAskPrice            float32  `protobuf:"fixed32,9,opt,name=MinAskPrice,proto3" json:"MinAskPrice,omitempty"`
	MaxAskPrice            float32  `protobuf:"fixed32,10,opt,name=MaxAskPrice,proto3" json:"MaxAskPrice,omitempty"`
	MinBidPrice            float32  `protobuf:"fixed32,11,opt,name=MinBidPrice,proto3" json:"MinBidPrice,omitempty"`
	MaxBidPrice            float32  `protobuf:"fixed32,12,opt,name=MaxBidPrice,proto3" json:"MaxBidPrice,omitempty"`
	CrossMarketMinBidPrice float32  `protobuf:"fixed32,13,opt,name=CrossMarketMinBidPrice,proto3" json:"CrossMarketMinBidPrice,omitempty"`
	CrossMarketMaxBidPrice float32  `protobuf:"fixed32,14,opt,name=CrossMarketMaxBidPrice,proto3" json:"CrossMarketMaxBidPrice,omitempty"`
	Tokens                 float32  `protobuf:"fixed32,15,opt,name=Tokens,proto3" json:"Tokens,omitempty"`
	Size                   float32  `protobuf:"fixed32,16,opt,name=Size,proto3" json:"Size,omitempty"`
	Profit                 float32  `protobuf:"fixed32,17,opt,name=Profit,proto3" json:"Profit,omitempty"`
	SupportSize            float32  `protobuf:"fixed32,18,opt,name=SupportSize,proto3" json:"SupportSize,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ArbitrageMessage) Reset()         { *m = ArbitrageMessage{} }
func (m *ArbitrageMessage) String() string { return proto.CompactTextString(m) }
func (*ArbitrageMessage) ProtoMessage()    {}
func (*ArbitrageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e11221455b4f1c, []int{0}
}

func (m *ArbitrageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArbitrageMessage.Unmarshal(m, b)
}
func (m *ArbitrageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArbitrageMessage.Marshal(b, m, deterministic)
}
func (m *ArbitrageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArbitrageMessage.Merge(m, src)
}
func (m *ArbitrageMessage) XXX_Size() int {
	return xxx_messageInfo_ArbitrageMessage.Size(m)
}
func (m *ArbitrageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ArbitrageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ArbitrageMessage proto.InternalMessageInfo

func (m *ArbitrageMessage) GetPercent() float32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *ArbitrageMessage) GetEx1() Exchange {
	if m != nil {
		return m.Ex1
	}
	return Exchange_UnknownExchange
}

func (m *ArbitrageMessage) GetEx2() Exchange {
	if m != nil {
		return m.Ex2
	}
	return Exchange_UnknownExchange
}

func (m *ArbitrageMessage) GetMarket1() Market {
	if m != nil {
		return m.Market1
	}
	return Market_UnknownMarket
}

func (m *ArbitrageMessage) GetMarket2() Market {
	if m != nil {
		return m.Market2
	}
	return Market_UnknownMarket
}

func (m *ArbitrageMessage) GetCrossMarket1() Market {
	if m != nil {
		return m.CrossMarket1
	}
	return Market_UnknownMarket
}

func (m *ArbitrageMessage) GetCrossMarket2() Market {
	if m != nil {
		return m.CrossMarket2
	}
	return Market_UnknownMarket
}

func (m *ArbitrageMessage) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *ArbitrageMessage) GetMinAskPrice() float32 {
	if m != nil {
		return m.MinAskPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetMaxAskPrice() float32 {
	if m != nil {
		return m.MaxAskPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetMinBidPrice() float32 {
	if m != nil {
		return m.MinBidPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetMaxBidPrice() float32 {
	if m != nil {
		return m.MaxBidPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetCrossMarketMinBidPrice() float32 {
	if m != nil {
		return m.CrossMarketMinBidPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetCrossMarketMaxBidPrice() float32 {
	if m != nil {
		return m.CrossMarketMaxBidPrice
	}
	return 0
}

func (m *ArbitrageMessage) GetTokens() float32 {
	if m != nil {
		return m.Tokens
	}
	return 0
}

func (m *ArbitrageMessage) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ArbitrageMessage) GetProfit() float32 {
	if m != nil {
		return m.Profit
	}
	return 0
}

func (m *ArbitrageMessage) GetSupportSize() float32 {
	if m != nil {
		return m.SupportSize
	}
	return 0
}

func init() {
	proto.RegisterType((*ArbitrageMessage)(nil), "orderbook.ArbitrageMessage")
}

func init() { proto.RegisterFile("arbitrage.proto", fileDescriptor_16e11221455b4f1c) }

var fileDescriptor_16e11221455b4f1c = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xe9, 0xfe, 0xba, 0x6c, 0xee, 0x4f, 0x84, 0x71, 0xf1, 0xa9, 0x08, 0xc2, 0x40, 0x18,
	0x2c, 0xa2, 0xef, 0x53, 0xf6, 0x38, 0x18, 0x9d, 0x5f, 0xa0, 0xeb, 0xae, 0x33, 0x14, 0x9a, 0x71,
	0x1b, 0x61, 0xf8, 0xc9, 0xfc, 0x78, 0xd2, 0xa4, 0xcd, 0xe2, 0x64, 0xea, 0x5b, 0xee, 0x39, 0xbf,
	0x73, 0xd2, 0x5c, 0xca, 0x06, 0x31, 0x6d, 0xa4, 0xa6, 0x78, 0x87, 0xd3, 0x3d, 0x29, 0xad, 0x78,
	0x47, 0xd1, 0x16, 0x69, 0xa3, 0x54, 0x7a, 0x3d, 0x70, 0x47, 0xeb, 0xdd, 0x7c, 0x36, 0xd9, 0x70,
	0x5e, 0xf1, 0x4b, 0xcc, 0xf3, 0x78, 0x87, 0x1c, 0x58, 0x7b, 0x85, 0x94, 0x60, 0xa6, 0x21, 0x08,
	0x83, 0x49, 0x2d, 0xaa, 0x46, 0x7e, 0xcb, 0xea, 0x8b, 0xc3, 0x0c, 0x6a, 0x61, 0x30, 0xe9, 0x8b,
	0xab, 0xe9, 0xb1, 0x6d, 0x71, 0x48, 0xde, 0xe2, 0x6c, 0x87, 0x51, 0xe1, 0x5b, 0x4c, 0x40, 0xfd,
	0x57, 0x4c, 0xf0, 0x3b, 0xd6, 0x5e, 0xc6, 0x94, 0xa2, 0x9e, 0x41, 0xc3, 0xa0, 0x23, 0x0f, 0xb5,
	0x4e, 0x54, 0x11, 0x47, 0x58, 0x40, 0xf3, 0x0f, 0x58, 0xf0, 0x07, 0xd6, 0x7b, 0x26, 0x95, 0xe7,
	0x55, 0x7d, 0xeb, 0x5c, 0xe2, 0x1b, 0x76, 0x12, 0x13, 0xd0, 0xfe, 0x4f, 0x4c, 0xf0, 0x31, 0x6b,
	0xbd, 0xc8, 0x24, 0x45, 0x82, 0x8b, 0x30, 0x98, 0x74, 0xa2, 0x72, 0xe2, 0x21, 0xeb, 0x2e, 0x65,
	0x36, 0xcf, 0xd3, 0x15, 0xc9, 0x04, 0xa1, 0x63, 0x76, 0xe9, 0x4b, 0x86, 0x88, 0x0f, 0x8e, 0x60,
	0x25, 0x71, 0x94, 0xca, 0x8e, 0x27, 0xb9, 0xb5, 0x44, 0xd7, 0x75, 0x54, 0x52, 0xd9, 0xe1, 0x88,
	0x9e, 0xeb, 0x70, 0xc4, 0x23, 0x1b, 0x7b, 0xdf, 0xeb, 0xd7, 0x5d, 0x1a, 0xf8, 0x8c, 0x7b, 0x9a,
	0xf3, 0x2e, 0xe9, 0xff, 0xcc, 0x79, 0xf7, 0x15, 0xfb, 0x50, 0x29, 0x66, 0x39, 0x0c, 0x0c, 0x57,
	0x4e, 0x9c, 0xb3, 0xc6, 0x5a, 0x7e, 0x20, 0x0c, 0x8d, 0x6a, 0xce, 0x05, 0xbb, 0x22, 0xf5, 0x2a,
	0x35, 0x8c, 0x2c, 0x6b, 0xa7, 0xe2, 0x55, 0xeb, 0xf7, 0xfd, 0x5e, 0x91, 0x36, 0x11, 0x6e, 0x5f,
	0xe5, 0x49, 0x9b, 0x96, 0xf9, 0x83, 0xef, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x05, 0xa1, 0x51,
	0xe8, 0xf0, 0x02, 0x00, 0x00,
}
