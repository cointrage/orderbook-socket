// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderbook/message.proto

package orderbook

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_UnknownMessageType   MessageType = 0
	MessageType_OrderBookMessage     MessageType = 1
	MessageType_OrderBookDiffMessage MessageType = 2
	MessageType_SubscribeMessage     MessageType = 3
)

var MessageType_name = map[int32]string{
	0: "UnknownMessageType",
	1: "OrderBookMessage",
	2: "OrderBookDiffMessage",
	3: "SubscribeMessage",
}

var MessageType_value = map[string]int32{
	"UnknownMessageType":   0,
	"OrderBookMessage":     1,
	"OrderBookDiffMessage": 2,
	"SubscribeMessage":     3,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6434cfa63387b10d, []int{0}
}

type Message struct {
	Ts                   int64       `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Type                 MessageType `protobuf:"varint,2,opt,name=Type,proto3,enum=orderbook.MessageType" json:"Type,omitempty"`
	Data                 []byte      `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_6434cfa63387b10d, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_UnknownMessageType
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("orderbook.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Message)(nil), "orderbook.Message")
}

func init() { proto.RegisterFile("orderbook/message.proto", fileDescriptor_6434cfa63387b10d) }

var fileDescriptor_6434cfa63387b10d = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0x2f, 0x4a, 0x49,
	0x2d, 0x4a, 0xca, 0xcf, 0xcf, 0xd6, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x4b, 0x28, 0x45, 0x72, 0xb1, 0xfb, 0x42, 0xe4, 0x84, 0xf8,
	0xb8, 0x98, 0x42, 0x8a, 0x25, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x98, 0x42, 0x8a, 0x85, 0xb4,
	0xb8, 0x58, 0x42, 0x2a, 0x0b, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0xf8, 0x8c, 0xc4, 0xf4, 0xe0,
	0x9a, 0xf4, 0xa0, 0x3a, 0x40, 0xb2, 0x41, 0x60, 0x35, 0x42, 0x42, 0x5c, 0x2c, 0x2e, 0x89, 0x25,
	0x89, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x60, 0xb6, 0x56, 0x36, 0x17, 0x37, 0x92, 0x42,
	0x21, 0x31, 0x2e, 0xa1, 0xd0, 0xbc, 0xec, 0xbc, 0xfc, 0xf2, 0x3c, 0x24, 0x51, 0x01, 0x06, 0x21,
	0x11, 0x2e, 0x01, 0x7f, 0x90, 0xc9, 0x4e, 0xf9, 0xf9, 0xd9, 0x50, 0x19, 0x01, 0x46, 0x21, 0x09,
	0x2e, 0x11, 0xb8, 0xa8, 0x4b, 0x66, 0x5a, 0x1a, 0x4c, 0x86, 0x09, 0xa4, 0x3e, 0xb8, 0x34, 0xa9,
	0x38, 0xb9, 0x28, 0x33, 0x29, 0x15, 0x26, 0xca, 0x9c, 0xc4, 0x06, 0xf6, 0x99, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xc5, 0xbd, 0x7f, 0x45, 0xf4, 0x00, 0x00, 0x00,
}
